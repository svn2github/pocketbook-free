#ifndef _mymath_h_
#define	_mymath_h_

//---------------------------------------------------------------------------
// Функция для взятия квадратного корня от целого числа
unsigned long sqri(unsigned long i)
{
	unsigned long rslt = i; 
	unsigned long div = i; 
	if (i <= 0) return 0; 
	while (1)
	{
		div = (i / div + div) / 2; 
		if (rslt > div) rslt = div;
		else return rslt; 
	}
}

//---------------------------------------------------------------------------
// Таблица значений косинуса
const short int cos_values_table[250] = 
{1000, 999, 999, 999, 999, 999, 999, 999, 998, 998, 
998, 997, 997, 996, 996, 995, 994, 994, 993, 992, 
992, 991, 990, 989, 988, 987, 986, 985, 984, 983, 
982, 981, 979, 978, 977, 975, 974, 973, 971, 970, 
968, 967, 965, 963, 962, 960, 958, 956, 954, 952, 
951, 949, 947, 945, 942, 940, 938, 936, 934, 932, 
929, 927, 925, 922, 920, 917, 915, 912, 910, 907, 
904, 902, 899, 896, 893, 891, 888, 885, 882, 879, 
876, 873, 870, 867, 863, 860, 857, 854, 850, 847, 
844, 840, 837, 834, 830, 827, 823, 819, 816, 812, 
809, 805, 801, 797, 793, 790, 786, 782, 778, 774, 
770, 766, 762, 758, 754, 750, 745, 741, 737, 733, 
728, 724, 720, 715, 711, 707, 702, 698, 693, 689, 
684, 679, 675, 670, 666, 661, 656, 651, 647, 642, 
637, 632, 627, 622, 617, 612, 607, 602, 597, 592, 
587, 582, 577, 572, 567, 562, 556, 551, 546, 541, 
535, 530, 525, 519, 514, 509, 503, 498, 492, 487, 
481, 476, 470, 465, 459, 453, 448, 442, 437, 431, 
425, 420, 414, 408, 402, 397, 391, 385, 379, 373, 
368, 362, 356, 350, 344, 338, 332, 326, 320, 314, 
309, 303, 297, 291, 285, 278, 272, 266, 260, 254, 
248, 242, 236, 230, 224, 218, 212, 205, 199, 193, 
187, 181, 175, 168, 162, 156, 150, 144, 137, 131, 
125, 119, 112, 106, 100, 94, 87, 81, 75, 69, 
62, 56, 50, 43, 37, 31, 25, 18, 12, 0};

//---------------------------------------------------------------------------
// Функция, аналогичная косинусу. Принимает
// целое число - количесто тысячных долей окружности
// (0 - 0 градусов, 1000 - 360 градусов) и
// возвращает целое число от -1000 до 1000
int cosi(int fi)
{
	int cicle;
	int cicleq;

	// Для отрицательных углов
	if(fi < 0) fi = -fi;

	// Отбрасываем циклическую часть
	cicle = fi / 1000;
	fi -= cicle * 1000;
	
	// Определяем значение косинуса
	cicleq = fi / 250;
	fi -= cicleq * 250;
	if(cicleq == 0) return -cos_values_table[fi];
	if(cicleq == 1) return cos_values_table[249 - fi];
	if(cicleq == 2) return cos_values_table[fi];
	if(cicleq == 3) return -cos_values_table[249 - fi];
	return 0;
}

//---------------------------------------------------------------------------
// Функция, аналогичная синусу. Принимает
// целое число - количесто тысячных долей окружности
// (0 - 0 градусов, 1000 - 360 градусов) и
// возвращает целое число от -1000 до 1000
int sini(int fi)
{
	// Определяем значение синуса
	return cosi(fi - 250);
}

//Точка лежит внутри полигона
int pnpoly(int npol, int * xp, int * yp, int x, int y) {
   int c = 0;
   int i = 0, j = npol - 1;
   for (; i < npol; j = i++) 
   {
     if ((((yp[i]<=y) && (y<yp[j])) || ((yp[j]<=y) && (y<yp[i]))) &&
       (x > (xp[j] - xp[i]) * (y - yp[i]) / (yp[j] - yp[i]) + xp[i]))
         c = !c;
   }
   return c;
}


#endif	/* _mymath_h_ */
